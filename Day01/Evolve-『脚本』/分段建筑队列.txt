// ==UserScript==
// @name         分段建筑队列
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  try to take over the world!
// @author       EvolveQQGroup
// @match        https://g8hh.github.io/evolve/
// @match        https://wdjwxh.github.io/Evolve-Scripting-Edition/
// @match        https://wdjwxh.gitee.io/evolve-scripting-edition/
// @match        https://tmvictor.github.io/Evolve-Scripting-Edition/
// @match        https://pmotschmann.github.io/Evolve/
// @match        http://localhost:82/
// @grant        none
// @require      https://code.jquery.com/jquery-3.4.1.min.js
// ==/UserScript==

(function($) {
    'use strict';

	var WC0_times = 0
	var WC0;
    var WC1_times = 0
    var WC1;
    var WC2_times = 0
    var WC2;
    var WC3_times = 0
    var WC3;
    var WC4_times = 0
    var WC4;
    var WC5_times = 0
    var WC5;
    var WC6_times = 0
    var WC6;
    var WC7_times = 0
    var WC7;
    var WC8_times = 0
    var WC8;
  
    
    //世界对撞机初始化
	WC0 = window.setInterval(SeqCollider, 5000);

    function SeqCollider()
    {
		WC0_times = WC0_times + 1;
		//判断是否需要初始化
		if(WC0_times > 500)
		{
			var WC_temp = WC0
			WC0_times = 0;
			WC0 = window.setInterval(SeqCollider, 5000);
			clearInterval(WC_temp)
			return;
		}
        try
        {
            if(evolve.global.space.world_controller.count > 0)
            {
                clearInterval(WC0)
                return;
            }

            if(evolve.global.space.world_collider.count < 10)
            {
                return;
            }

            if(document.querySelector("#space-world_collider > a.button > span.aTitle") == null)
            {
                return;
            }
        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x25}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x100}));
        document.querySelector("#space-world_collider > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x25}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x100}));


    }
    //星际之门初始化
    WC1 = window.setInterval(SeqInterstellar_stargate, 1000);
    console.log("星际之门初始化成功");

    function SeqInterstellar_stargate()
    {
		WC1_times = WC1_times + 1;

		//判断是否需要初始化
		if(WC1_times > 250)
		{
			var WC1_temp = WC1
			WC1_times = 0;
			WC1 = window.setInterval(SeqInterstellar_stargate, 1000);
			clearInterval(WC1_temp)
			return;
		}
        try
        {
            if(evolve.global.interstellar.stargate.count >= 200)
            {
                clearInterval(WC1)
                return;
            }

            if(document.querySelector("#interstellar-stargate > a.button> span.count").innerHTML < 1)
            {
                //console.log("小于条件");
                return;
            }

        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x25}));

        document.querySelector("#interstellar-stargate > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x25}));

        //console.log("目前数量:" + document.querySelector("#interstellar-stargate > a.button> span.count").innerHTML)
    }

    //戴森网初始化
    WC2 = window.setInterval(SeqInterstellar_dyson, 1000);
    console.log("戴森网初始化成功");

    function SeqInterstellar_dyson()
    {
		WC2_times = WC2_times + 1;

		//判断是否需要初始化
		if(WC2_times > 250)
		{
			var WC2_temp = WC2
			WC2_times = 0;
			WC2 = window.setInterval(SeqInterstellar_dyson, 1000);
			clearInterval(WC2_temp)
			return;
		}
        try
        {
            if(evolve.global.interstellar.dyson.count >= 100)
            {
                clearInterval(WC2)
                return;
            }

            if(document.querySelector("#interstellar-dyson > a.button> span.count").innerHTML < 1)
            {
                //console.log("小于条件");
                return;
            }

        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x100}));

        document.querySelector("#interstellar-dyson > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x100}));

        //console.log("目前数量:" + document.querySelector("#interstellar-dyson > a.button> span.count").innerHTML)
    }

    //轨道电梯初始化
    WC3 = window.setInterval(SeqInterstellar_space_elevator, 1000);
    console.log("轨道电梯初始化成功");

    function SeqInterstellar_space_elevator()
    {
		WC3_times = WC3_times + 1;

		//判断是否需要初始化
		if(WC3_times > 250)
		{
			var WC3_temp = WC3
			WC3_times = 0;
			WC3 = window.setInterval(SeqInterstellar_space_elevator, 1000);
			clearInterval(WC3_temp)
			return;
		}
        try
        {
            if(evolve.global.interstellar.space_elevator.count >= 100)
            {
                clearInterval(WC3)
                return;
            }

            if(document.querySelector("#interstellar-space_elevator > a.button> span.count").innerHTML < 1)
            {
                //console.log("小于条件");
                return;
            }

        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x25}));

        document.querySelector("#interstellar-space_elevator > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x25}));

        //console.log("目前数量:" + document.querySelector("#interstellar-space_elevator > a.button> span.count").innerHTML)
    }

    //重力穹顶初始化
    WC4 = window.setInterval(SeqInterstellar_gravity_dome, 1000);
    console.log("重力穹顶初始化成功");

    function SeqInterstellar_gravity_dome()
    {
		WC4_times = WC4_times + 1;

		//判断是否需要初始化
		if(WC4_times > 250)
		{
			var WC4_temp = WC4
			WC4_times = 0;
			WC4 = window.setInterval(SeqInterstellar_gravity_dome, 1000);
			clearInterval(WC4_temp)
			return;
		}
        try
        {
            if(evolve.global.interstellar.gravity_dome.count >= 100)
            {
                clearInterval(WC4)
                return;
            }

            if(document.querySelector("#interstellar-gravity_dome > a.button> span.count").innerHTML < 1)
            {
                //console.log("小于条件");
                return;
            }

        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x25}));

        document.querySelector("#interstellar-gravity_dome > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x25}));

        //console.log("目前数量:" + document.querySelector("#interstellar-gravity_dome > a.button> span.count").innerHTML)
    }

    //飞升装置初始化
    WC5 = window.setInterval(SeqInterstellar_ascension_machine, 1000);
    console.log("飞升装置初始化成功");

    function SeqInterstellar_ascension_machine()
    {
		WC5_times = WC5_times + 1;

		//判断是否需要初始化
		if(WC5_times > 250)
		{
			var WC5_temp = WC5
			WC5_times = 0;
			WC5 = window.setInterval(SeqInterstellar_ascension_machine, 1000);
			clearInterval(WC5_temp)
			return;
		}
        try
        {
            if(evolve.global.interstellar.ascension_machine.count >= 100)
            {
                clearInterval(WC5)
                return;
            }

            if(document.querySelector("#interstellar-ascension_machine > a.button> span.count").innerHTML < 1)
            {
                //console.log("小于条件");
                return;
            }

        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x25}));

        document.querySelector("#interstellar-ascension_machine > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x25}));

        //console.log("目前数量:" + document.querySelector("#interstellar-ascension_machine > a.button> span.count").innerHTML)
    }

    //恒星引擎初始化
    WC6 = window.setInterval(SeqInterstellar_stellar_engine, 1000);
    console.log("恒星引擎初始化成功");

    function SeqInterstellar_stellar_engine()
    {
		WC6_times = WC6_times + 1;

		//判断是否需要初始化
		if(WC6_times > 250)
		{
			var WC6_temp = WC6
			WC6_times = 0;
			WC6 = window.setInterval(SeqInterstellar_stellar_engine, 1000);
			clearInterval(WC6_temp)
			return;
		}
        try
        {
            if(evolve.global.interstellar.stellar_engine.count >= 100)
            {
                clearInterval(WC6)
                return;
            }

            if(document.querySelector("#interstellar-stellar_engine > a.button> span.count").innerHTML < 1)
            {
                //console.log("小于条件");
                return;
            }

        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x25}));

        document.querySelector("#interstellar-stellar_engine > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x25}));

        //console.log("目前数量:" + document.querySelector("#interstellar-stellar_engine > a.button> span.count").innerHTML)
    }

    //东侧巨塔初始化
    WC7 = window.setInterval(SeqInterstellar_east_tower, 1000);
    console.log("东侧巨塔初始化成功");

    function SeqInterstellar_east_tower()
    {
		WC7_times = WC7_times + 1;

		//判断是否需要初始化
		if(WC7_times > 250)
		{
			var WC7_temp = WC7
			WC7_times = 0;
			WC7 = window.setInterval(SeqInterstellar_east_tower, 1000);
			clearInterval(WC7_temp)
			return;
		}
        try
        {
            if(evolve.global.portal.east_tower.count >= 412)
            {
                clearInterval(WC7)
                return;
            }

            if(document.querySelector("#portal-east_tower > a.button> span.count").innerHTML < 1)
            {
                //console.log("小于条件");
                return;
            }

        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x25}));

        document.querySelector("#portal-east_tower > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x25}));

        //console.log("目前数量:" + document.querySelector("#portal-east_tower > a.button> span.count").innerHTML)
    }


    //西侧巨塔初始化
    WC8 = window.setInterval(SeqInterstellar_west_tower, 1000);
    console.log("西侧巨塔初始化成功");

    function SeqInterstellar_west_tower()
    {
		WC8_times = WC8_times + 1;

		//判断是否需要初始化
		if(WC8_times > 250)
		{
			var WC8_temp = WC8
			WC8_times = 0;
			WC8 = window.setInterval(SeqInterstellar_west_tower, 1000);
			clearInterval(WC8_temp)
			return;
		}
        try
        {
            if(evolve.global.portal.west_tower.count >= 412)
            {
                clearInterval(WC8)
                return;
            }

            if(document.querySelector("#portal-west_tower > a.button> span.count").innerHTML < 1)
            {
                //console.log("小于条件");
                return;
            }

        }
        catch(err)
        {
            return;
        }

        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keydown", {key: evolve.global.settings.keyMap.x25}));

        document.querySelector("#portal-west_tower > a.button > span.aTitle").click();

        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.q}));
        document.dispatchEvent(new KeyboardEvent("keyup", {key: evolve.global.settings.keyMap.x25}));

        //console.log("目前数量:" + document.querySelector("#portal-west_tower > a.button> span.count").innerHTML)
    }

})(jQuery);
